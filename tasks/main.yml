---
- name: Get Ontapi version
  na_ontap_gather_facts:
    state: info
    hostname: "{{ hostname }}"
    username: "{{ username }}"
    password: "{{ password }}"
    https: true
    ontapi: 32
    validate_certs: false
- name: Create Vserver
  na_ontap_svm:
    state: present
    name: "{{ item.name }}"
    root_volume: "{{ item.name }}_root"
    root_volume_aggregate: "{{ item.aggr }}"
    root_volume_security_style: unix
    hostname: "{{ hostname }}"
    username: "{{ username }}"
    password: "{{ password }}"
    ontapi: "{{ ontap_facts.ontap_version }}"
    https: true
    validate_certs: false
  with_items:
    "{{ vservers }}"
- name: Create Interface
  na_ontap_interface:
    state: present
    interface_name: "{{ item.name }}_mgmt_data_1"
    home_port: "{{ item.port }}"
    home_node: "{{ item.node }}"
    role: data
    protocols: "{{ item.protocol }}"
    admin_status: up
    failover_policy: local-only
    firewall_policy: mgmt
    is_auto_revert: true
    address: "{{ item.address }}"
    netmask: "{{ item.netmask }}"
    vserver: "{{ item.name }}"
    hostname: "{{ hostname }}"
    username: "{{ username }}"
    password: "{{ password }}"
    ontapi: "{{ ontap_facts.ontap_version }}"
    https: true
    validate_certs: false
  with_items:
    "{{ vservers }}"
- name: Create CIFS Server
  na_ontap_cifs_server:
    state: present
    vserver: "{{ item.name }}"
    domain: "{{ item.domain }}"
    cifs_server_name: "{{ item.cifs_server_name }}"
    force: "{{ item.force }}"
    admin_password: "{{ item.admin_password }}"
    admin_user_name: "{{ item.admin_user_name }}"
    ou: "{{ item.ou }}"
    service_state: started
    hostname: "{{ hostname }}"
    username: "{{ username }}"
    password: "{{ password }}"
    ontapi: "{{ ontap_facts.ontap_version }}"
    https: true
    validate_certs: false
  with_items:
    "{{ vservers }}"
  when: item.protocol == "cifs"
- name: Create NFS Server
  na_ontap_nfs:
    state: present
    service_state: started
    vserver: "{{ item.name }}"
    nfsv3: enabled
    nfsv4: disabled
    nfsv41: disabled
    tcp: enabled
    udp: enabled
    vstorage_state: disabled
    hostname: "{{ hostname }}"
    username: "{{ username }}"
    password: "{{ password }}"
    ontapi: "{{ ontap_facts.ontap_version }}"
    https: true
    validate_certs: false
  with_items:
    "{{ vservers }}"
  when: item.protocol == "nfs"
- name: Setup default rules
  na_ontap_export_policy_rule:
    state: present
    policy_name: default
    vserver: "{{ item.name }}"
    client_match: 0.0.0.0/0
    ro_rule: any
    rw_rule: "{{ item.rw }}"
    protocol: "{{ item.protocol }}"
    hostname: "{{ hostname }}"
    username: "{{ username }}"
    password: "{{ password }}"
    ontapi: "{{ ontap_facts.ontap_version }}"
    https: true
    validate_certs: false
  with_items:
    "{{ vservers }}"
- name: Create DNS
  na_ontap_dns:
    state: present
    vserver: "{{ item.name }}"
    domains: "{{ item.dns_domains }}"
    nameservers: "{{ item.dns_nameservers }}"
    hostname: "{{ hostname }}"
    username: "{{ username }}"
    password: "{{ password }}"
    ontapi: "{{ ontap_facts.ontap_version }}"
    https: true
    validate_certs: false
  with_items:
    "{{ vservers }}"
  when: item.dns_nameservers is defined
